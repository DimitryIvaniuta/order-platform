package com.github.dimitryivaniuta.payment.domain.spi;

import java.util.Map;

/**
 * Minimal, provider-agnostic interface that fits your current adapters.
 * Amounts are minor-units; currency is ISO 4217 (e.g., "USD").
 * Idempotency keys are generated by the caller and forwarded to the PSP.
 */
public interface PaymentProvider {

    /** Uniform result shape used across providers. */
    record Result(boolean authorized, String externalRef, String failureCode, String failureReason) {}

    Result authorize(long amountMinor,
                     String currency,
                     String reference,                 // merchant ref (e.g., "order-123")
                     Map<String, Object> paymentMethod, // method token/map; providers may ignore
                     String idempotencyKey);

    Result capture(long amountMinor,
                   String currency,
                   String authReference,               // provider auth/payment-intent ref
                   String idempotencyKey);

    Result refund(long amountMinor,
                  String currency,
                  String captureOrAuthReference,       // provider capture/charge ref
                  String idempotencyKey);
}
