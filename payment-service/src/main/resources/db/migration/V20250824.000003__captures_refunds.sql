-- Partial/multiple captures
CREATE TABLE IF NOT EXISTS captures (
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    tenant_id        VARCHAR(64)  NOT NULL,
    payment_id       BIGINT       NOT NULL REFERENCES payments(id) ON DELETE CASCADE,
    amount_minor     BIGINT       NOT NULL CHECK (amount_minor > 0),
    currency_code    CHAR(3)      NOT NULL CHECK (currency_code = upper(currency_code) AND currency_code ~ '^[A-Z]{3}$'),
    status           VARCHAR(32)  NOT NULL,
    psp              VARCHAR(64)  NOT NULL,
    psp_capture_ref  VARCHAR(128),
    created_at       TIMESTAMPTZ  NOT NULL DEFAULT now(),
    updated_at       TIMESTAMPTZ  NOT NULL DEFAULT now(),
    CONSTRAINT uq_capture_ref UNIQUE NULLS NOT DISTINCT (tenant_id, psp, psp_capture_ref)
);

CREATE INDEX IF NOT EXISTS idx_captures_payment      ON captures(payment_id);
CREATE INDEX IF NOT EXISTS idx_captures_status       ON captures(status);
CREATE INDEX IF NOT EXISTS idx_captures_created_at   ON captures(created_at);

DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_trigger WHERE tgname = 'trg_captures_set_updated_at'
  ) THEN
CREATE TRIGGER trg_captures_set_updated_at
    BEFORE UPDATE ON captures
    FOR EACH ROW EXECUTE FUNCTION set_updated_at();
END IF;
END $$;

-- Partial/multiple refunds
CREATE TABLE IF NOT EXISTS refunds (
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    tenant_id        VARCHAR(64)  NOT NULL,
    payment_id       BIGINT       NOT NULL REFERENCES payments(id) ON DELETE CASCADE,
    amount_minor     BIGINT       NOT NULL CHECK (amount_minor > 0),
    currency_code    CHAR(3)      NOT NULL CHECK (currency_code = upper(currency_code) AND currency_code ~ '^[A-Z]{3}$'),
    status           VARCHAR(32)  NOT NULL,
    reason_code      VARCHAR(64),
    psp              VARCHAR(64)  NOT NULL,
    psp_refund_ref   VARCHAR(128),
    created_at       TIMESTAMPTZ  NOT NULL DEFAULT now(),
    updated_at       TIMESTAMPTZ  NOT NULL DEFAULT now(),
    CONSTRAINT uq_refund_ref UNIQUE NULLS NOT DISTINCT (tenant_id, psp, psp_refund_ref)
);

CREATE INDEX IF NOT EXISTS idx_refunds_payment       ON refunds(payment_id);
CREATE INDEX IF NOT EXISTS idx_refunds_status        ON refunds(status);
CREATE INDEX IF NOT EXISTS idx_refunds_created_at    ON refunds(created_at);

DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_trigger WHERE tgname = 'trg_refunds_set_updated_at'
  ) THEN
CREATE TRIGGER trg_refunds_set_updated_at
    BEFORE UPDATE ON refunds
    FOR EACH ROW EXECUTE FUNCTION set_updated_at();
END IF;
END $$;
