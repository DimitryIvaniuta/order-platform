CREATE TABLE IF NOT EXISTS payment_attempts (
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    tenant_id          VARCHAR(64)  NOT NULL,
    payment_id         BIGINT       NOT NULL REFERENCES payments(id) ON DELETE CASCADE,
    attempt_no         INT          NOT NULL CHECK (attempt_no >= 1),
    status             VARCHAR(32)  NOT NULL,
    idempotency_key    VARCHAR(128),
    request_fingerprint CHAR(64),   -- hash of relevant request fields
    psp                VARCHAR(64)  NOT NULL,
    psp_ref            VARCHAR(128),
    failure_code       VARCHAR(64),
    failure_reason     TEXT,
    next_action_json   TEXT,
    created_at         TIMESTAMPTZ  NOT NULL DEFAULT now(),
    updated_at         TIMESTAMPTZ  NOT NULL DEFAULT now(),
    CONSTRAINT uq_attempt_idem UNIQUE NULLS NOT DISTINCT (payment_id, idempotency_key)
);

CREATE INDEX IF NOT EXISTS idx_payment_attempts_payment  ON payment_attempts(payment_id);
CREATE INDEX IF NOT EXISTS idx_payment_attempts_status   ON payment_attempts(status);
CREATE INDEX IF NOT EXISTS idx_payment_attempts_created  ON payment_attempts(created_at);

DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_trigger WHERE tgname = 'trg_payment_attempts_set_updated_at'
  ) THEN
CREATE TRIGGER trg_payment_attempts_set_updated_at
    BEFORE UPDATE ON payment_attempts
    FOR EACH ROW EXECUTE FUNCTION set_updated_at();
END IF;
END $$;
