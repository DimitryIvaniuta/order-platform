-- Daily-partitioned outbox (composite PK for partition key + identity id)
CREATE TABLE IF NOT EXISTS outbox (
                                      id             BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                                      tenant_id      VARCHAR(64)  NOT NULL,
    saga_id        UUID         NOT NULL,
    aggregate_type VARCHAR(64)  NOT NULL,
    aggregate_id   BIGINT,
    event_type     VARCHAR(64)  NOT NULL,
    event_key      VARCHAR(128),
    payload        TEXT         NOT NULL,
    headers_json   TEXT,
    attempts       INT          NOT NULL DEFAULT 0,
    lease_until    TIMESTAMPTZ,
    created_on     DATE         NOT NULL DEFAULT CURRENT_DATE,
    created_at     TIMESTAMPTZ  NOT NULL DEFAULT now(),
    updated_at     TIMESTAMPTZ  NOT NULL DEFAULT now(),
    CONSTRAINT pk_outbox PRIMARY KEY (id, created_on)
    ) PARTITION BY RANGE (created_on);

-- Helpful indexes
CREATE INDEX IF NOT EXISTS idx_outbox_tenant       ON outbox(tenant_id);
CREATE INDEX IF NOT EXISTS idx_outbox_event_type   ON outbox(event_type);
CREATE INDEX IF NOT EXISTS idx_outbox_created_at   ON outbox(created_at);
CREATE INDEX IF NOT EXISTS idx_outbox_lease_until  ON outbox(lease_until);

-- Create partitions for today and the next 30 days
DO $$
DECLARE d DATE := CURRENT_DATE;
BEGIN
FOR i IN 0..30 LOOP
    EXECUTE format($f$
      CREATE TABLE IF NOT EXISTS outbox_%s
      PARTITION OF outbox
      FOR VALUES FROM (DATE %L) TO (DATE %L)
    $f$, to_char(d, 'YYYYMMDD'), d, d + 1);
    d := d + 1;
END LOOP;
END $$;
