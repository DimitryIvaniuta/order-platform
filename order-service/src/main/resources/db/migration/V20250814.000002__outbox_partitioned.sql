-- Daily-partitioned outbox for transactional publishing
-- Matches com.github.dimitryivaniuta.dto.OutboxRow
-- and OutboxPublisher code style found in your repo.

-- Base table partitioned by created_on date

CREATE TABLE IF NOT EXISTS outbox (
                                      id             BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                                      tenant_id      VARCHAR(64)   NOT NULL,
    saga_id        UUID          NOT NULL,
    aggregate_type VARCHAR(64)   NOT NULL,
    aggregate_id   BIGINT,
    event_type     VARCHAR(64)   NOT NULL,
    event_key      VARCHAR(128),
    payload        TEXT          NOT NULL,
    headers_json   TEXT,
    attempts       INT           NOT NULL DEFAULT 0,
    lease_until    TIMESTAMPTZ,
    created_at     TIMESTAMPTZ   NOT NULL DEFAULT now(),
    updated_at     TIMESTAMPTZ   NOT NULL DEFAULT now(),

    -- partition key
    created_on     DATE          NOT NULL DEFAULT CURRENT_DATE,

    -- PK must include partition column
    PRIMARY KEY (id, created_on)
    ) PARTITION BY RANGE (created_on);

-- Helpful indexes on parent (propagated to children where applicable)
CREATE INDEX IF NOT EXISTS idx_outbox_tenant_created_on ON outbox (tenant_id, created_on);
CREATE INDEX IF NOT EXISTS idx_outbox_lease_until       ON outbox (lease_until);
CREATE INDEX IF NOT EXISTS idx_outbox_attempts          ON outbox (attempts);
CREATE INDEX IF NOT EXISTS idx_outbox_agg               ON outbox (aggregate_type, aggregate_id);


-- updated_at trigger for outbox
CREATE OR REPLACE FUNCTION set_outbox_updated_at()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
BEGIN
  NEW.updated_at := now();
RETURN NEW;
END
$$;

DROP TRIGGER IF EXISTS trg_outbox_set_updated_at ON outbox;
CREATE TRIGGER trg_outbox_set_updated_at
    BEFORE UPDATE ON outbox
    FOR EACH ROW EXECUTE FUNCTION set_outbox_updated_at();

-- Create partitions for today and the next 30 days.
DO $$
DECLARE
d DATE := CURRENT_DATE;
BEGIN
FOR i IN 0..30 LOOP
    EXECUTE format($f$
      CREATE TABLE IF NOT EXISTS outbox_%s
      PARTITION OF outbox
      FOR VALUES FROM (DATE %L) TO (DATE %L)
    $f$, to_char(d, 'YYYYMMDD'), d, d + 1);
    d := d + 1;
END LOOP;
END$$;