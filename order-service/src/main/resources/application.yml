spring:
  application:
    name: order-service

  r2dbc:
    url: r2dbc:postgresql://${DB_HOST:localhost}:${DB_PORT_ORDER:5433}/${DB_NAME_ORDERS:orders}
    username: ${DB_USER:user}
    password: ${DB_PASS:pass}
    pool:
      enabled: true
      initial-size: 10
      max-size: 50
      max-idle-time: 30s
      validation-query: SELECT 1
      max-create-connection-time: 5s
      max-acquire-time: 5s
      max-life-time: 30m

  flyway:
    enabled: true
    locations: classpath:db/migration
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT_ORDER:5433}/${DB_NAME_ORDERS:orders}
    user: ${DB_USER:user}
    password: ${DB_PASS:pass}

  webflux:
    base-path: /api

  security:
    oauth2:
      resourceserver:
        jwt:
          # Option A (recommended): use issuer + discovery
          issuer-uri: http://localhost:8080/api
          # Option B (direct JWKS): comment issuer-uri and uncomment next line
          # jwk-set-uri: http://localhost:8080/api/.well-known/jwks.json

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: order-service
      auto-offset-reset: earliest

server:
  port: ${ORDER_PORT:8081}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus

logging:
  file:
    name: logs/${spring.application.name}.log
  # NEW: Logback rolling‑policy settings
  logback:
    rollingpolicy:
      # how big each file can grow before rolling over
      max‑file‑size: 50MB
      # how many days to keep archived files
      max‑history: 30
      # (optional) total cap on all archives, e.g. 1GB
      total‑size‑cap: 1GB

  # your existing level & pattern config...
  level:
    root: INFO
    com.github.dimitryivaniuta: DEBUG
    io.r2dbc.postgresql: DEBUG
    org.springframework.r2dbc.core: DEBUG
    com.github.dimitryivaniuta.orderservice.outbox.OutboxPublisher: DEBUG

  pattern:
    console: "[%d{yyyy‑MM‑dd HH:mm:ss.SSS}] [%thread] %-5level %logger{36} ‑ %msg%n"
    file:    "[%d{yyyy‑MM‑dd HH:mm:ss.SSS}] [%thread] %-5level %logger{36} ‑ %msg%n"

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html

outbox:
  publisher:
    batch-size: 200
    poll-interval: PT5S
    lease-duration: 20s
    base-backoff: 5s
    max-backoff: 2m
    events-topic: order.events.v1

security:
  jwt:
    # When running in Docker Compose, set SECURITY_ISSUER_URI=http://api-gateway:8080
    issuer: http://localhost:8080/api
    audience: order-service
#    jwks-uri: ${JWT_JWKS_URI:http://localhost:8080/api/.well-known/jwks.json}

