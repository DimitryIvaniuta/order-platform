CREATE TABLE IF NOT EXISTS saga_status (
    id         UUID        PRIMARY KEY,         -- UUIDv7 generated by the application
    tenant_id  VARCHAR(128) NOT NULL,
    user_id    VARCHAR(128) NOT NULL,
    type       VARCHAR(64)  NOT NULL,           -- e.g., ORDER_CREATE
    state      VARCHAR(64)  NOT NULL,           -- STARTED/RESERVED/PAID/SHIPPED/FAILED/COMPLETED
    reason     TEXT,
    created_at TIMESTAMPTZ  NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ  NOT NULL DEFAULT now()
);

CREATE INDEX IF NOT EXISTS idx_saga_status_tenant ON saga_status(tenant_id);
CREATE INDEX IF NOT EXISTS idx_saga_status_state  ON saga_status(state);

-- better page utilization if you expect frequent updates to the same rows
ALTER TABLE saga_status SET (fillfactor = 90);

CREATE OR REPLACE FUNCTION trg_saga_updated_at() RETURNS trigger AS $$
BEGIN
  NEW.updated_at := now();
RETURN NEW;
END;
$$ LANGUAGE plpgsql;

DROP TRIGGER IF EXISTS set_updated_at_saga ON saga_status;
CREATE TRIGGER set_updated_at_saga
    BEFORE UPDATE ON saga_status
    FOR EACH ROW
    EXECUTE FUNCTION trg_saga_updated_at();
